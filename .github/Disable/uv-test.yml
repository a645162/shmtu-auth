name: UV Integration Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-uv:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync

      - name: Lint with flake8
        run: |
          uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: uv run pytest

      - name: Test CLI startup
        run: uv run python start_cli.py --help

  test-build:
    runs-on: ubuntu-latest
    needs: test-uv

    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v3

      - name: Build package
        run: uv build

      - name: Check package contents
        run: |
          uv run python -m tarfile -l dist/*.tar.gz
          uv run python -m zipfile -l dist/*.whl
