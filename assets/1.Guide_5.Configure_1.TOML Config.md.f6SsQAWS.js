import{_ as s,n as i,m as a,a5 as n}from"./chunks/framework.CIhFt3g5.js";const g=JSON.parse('{"title":"TOML配置文件","description":"","frontmatter":{},"headers":[],"relativePath":"1.Guide/5.Configure/1.TOML Config.md","filePath":"1.Guide/5.Configure/1.TOML Config.md"}'),l={name:"1.Guide/5.Configure/1.TOML Config.md"},t=n(`<h1 id="toml配置文件" tabindex="-1">TOML配置文件 <a class="header-anchor" href="#toml配置文件" aria-label="Permalink to &quot;TOML配置文件&quot;">​</a></h1><h2 id="指定配置路径" tabindex="-1">指定配置路径 <a class="header-anchor" href="#指定配置路径" aria-label="Permalink to &quot;指定配置路径&quot;">​</a></h2><p>您可以通过命令行<code>-t</code>或者<code>--toml</code>参数指定TOML配置文件的路径。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shmtu-auth.exe</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.toml</span></span></code></pre></div><h2 id="读取顺序" tabindex="-1">读取顺序 <a class="header-anchor" href="#读取顺序" aria-label="Permalink to &quot;读取顺序&quot;">​</a></h2><p>如果用户配置TOML路径，则<strong>只</strong>会读取用户指定的路径。</p><p><strong>否则：</strong></p><p>如果当前运行目录下存在<code>config.toml</code>文件，将会读取该文件作为配置文件。 如果不存在，则会读取<code>config/config.toml</code>文件作为配置文件。</p><h2 id="配置文件示例" tabindex="-1">配置文件示例 <a class="header-anchor" href="#配置文件示例" aria-label="Permalink to &quot;配置文件示例&quot;">​</a></h2><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 机器名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_MACHINE_NAME = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 网络检查重试次数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_AUTH_NETWORK_CHECK_RETRY_TIMES = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 网络检查重试间隔</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_AUTH_NETWORK_CHECK_RETRY_TIME_INTERVAL = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 认证检测间隔</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_AUTH_TIME_INTERVAL = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下面的配置项暂时没有用到</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Notify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 企业微信WebHook</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_AUTH_WEBHOOK_WEWORK = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 睡眠时间段</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_WEBHOOK_SLEEP_TIME_START = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;23:00&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHMTU_WEBHOOK_SLEEP_TIME_END = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;7:00&quot;</span></span></code></pre></div>`,10),e=[t];function h(p,k,o,E,r,d){return a(),i("div",null,e)}const _=s(l,[["render",h]]);export{g as __pageData,_ as default};
